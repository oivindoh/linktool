URL: http://stud.aitel.hist.no/~oivindoh/prosjekt/
111% anonym!

	(for "cat /etc/passwd | grep oivindoh" oppgir ikke navn i det hele tatt :-)
	
	Krav ved installasjon: 
		Mappen systemet ligger i må være skrivbar for opprettelse av conf.php

FUNKSJONALITET:
	HTML5/CSS3-in-spirit. Null javaoppgulp. Null flashfjas.
	
	(XTRA) Rediger blogg ved å oppgi referansenummer angitt ved registrering
			Referansenummer er md5-hash av url, forfatter (de to obligatoriske feltene) og salt (fra config-fil)
	(XTRA) Rediger blogg ved å være innlogget som lærer og liste ut blogger for et fag
	
	Listing av blogger tilhørende et fag
	
	Eksportering av bloggliste til OPML-format
			Gjøres via GET for enkel linking (opprinnelig POST-action ;-p)
	
	Registrering av ny blogg ved hjelp av link med 32bokstavs fagID
	(XTRA) Registrerer ikke samme blogg-url med samme forfatter to ganger
			lar dog ikke studenter endre allerede eksisterende link herfra
			siden dette ville avsløre redigerings-linken om man har riktig navn og adresse
	(XTRA) Sjekking av link-url, både hos klient (html5) og på server før registrering.
	
	Innlogging for lærer
	(XTRA) Lærer kan hente ut samtlige fag (og tilhørende linker) registrert på seg selv, uavhengig av semester
	
	(XTRA) Klikkteller per blogglink
			går via filen go.php, som oppdaterer clicks-feltet i db
			videresender ved hjelp av header(location);
	(XTRA) Valg av hvilke felt som skal vises i blogglisting (via GET)
			viser alle felt om ingen valg er gjort
			viser alle felt om alle blir valgt bort
			viser alltid url direkte eller indirekte gjennom tittel-link
	
	Setupscript som lagrer databaseinformasjon og lignende ved førstegangs kjøring
		- kan også nås senere ved å legge til ?setup i url. Da kan man - om man har 
		administratorpassordet som ble satt ved første gangs kjøring - endre innstillingene.
		- kan opprette nødvendig database og tabeller om dette velges (dropper eksisterende - 
		burde kanskje fjerne akkurat denne biten før ferdig versjon)
	
	Sletting av fag
		- Sletter også alle tilhørende linker
		
		
	+ Mehr.
	
TODO:

	HUSK: distribuer uten conf.php
	
	Feltbredde i databasen må opp der data kjøres gjennom htmlentities()

	Mer generelle returverdier fra funksjoner istedenfor HTML-suppe.
	
	Templating
	
	Bytt til mysqli?
		Krever PHP5, mysql 4.1.3/5.0.7 eller nyere
			aitel = 5.0.51a
			her: 5.1.44
	
	Slidedown-meny for brukers fag
		
	AJAX. AJAX. (innlogging i første omgang)
	
	Lær mer om (mer nyttig) bruk av jQuery
	
	Funksjonalitet for å få resatt passord (krever mail)
			
	WOF: Fiks håndtering av duplicate-url
	     Godta samme url om fagID er ulik
			
	Mindre tomme sider. Møter bruker en tom liste skal det henvises til muligheter til å legge til innhold
		
	Mer kontroll av output fra db.
====

	Etter brukertester:
	
	Meny:
		Uten innlogging: ikke vis linker?
		Etter innlogging: ikke vis legg til/rediger blogg om bruker ikke har fag
		
		
SJEKKLISTE for innlevering:

Del 1
[v] Innloggingsløsning
[v] Brukernavn er epostadresse
[v] Passord kan velges selv
[v] Passord kan endres
[v] Administrerer egne fag, kan opprette nytt fag, kun fagnavn er obligatorisk
[v] Faget får unik lenke
[v] XTRA Lærer kan hente ut lenken til samtlige fag og semestre han er tilknyttet

Del 2
[v] Unik lenke leder til mulighet for registrering av blogg til faget
[v] Studentene logger seg _ikke_ inn
[v] Kun de som har riktig lenke kan registrere
	- bruker hashverdi som bygger på faginformasjon og en salt-verdi som genereres 
	  ved installasjon/kan endres manuelt i conf.php (sistnevnte vil invalidere samtlige
	  eksisterende innslag i databasen, og er dermed ikke å anbefale)
[v] Navn, bloggens adresse, RSSlenke, kort beskrivelse og estimert oppdateringsfrekvens lagres
[v] XTRA Blogg kan ikke registreres flere ganger
[v] XTRA Studenter kan endre informasjon om sin blogg ved å gå til unik URL generert ved registrering,
    - basert på samme type hash som faglenke

Del 3
[v] Læreren kan administrere blogger tilknyttet et fag, og studenter kan fra samme side
    få oversikt over alle blogger tilknyttet et fag.
[v] Siden nevnt i forrige punkt (1) inneholder kontroller for å vise/skjule alle typer 
	informasjon om lenkene. Dette gjøres via GET, og er derfor også mulig å gi bort 
	forhåndsinnstilt i form av en lenke.
[v] OPML-eksportering er tilgjengelig fra side nevnt i punkt 1/2. Denne er validerbar 
	og serves som text/xml.
[v] XTRA Lenker valideres under innleggingsprosessen, og er denne teoretisk gyldig, vil
	tittel på blogg hentes nettopp fra lenken som oppgis. Validering skjer både client og
	serverside.
[v] XTRA Læreren kan endre registrert informasjon i både fag og blogger manuelt uten problem.
[v] XTRA Hver utgående lenke ut for bloggene er tilknyttet hitcounter, og var lekende lett
	å sette opp.

Generelt
[v] Websidene er validert HTML5/CSS3 (veil.), og testet i alle moderne nettlesere.
	Nå vil vel noen semantikk***** våge å påstå at IE9 er en moderne browser, men 
	til vil jeg rett og slett si at dette er en browser jeg ikke gidder kaste vekk 
	tid på å sjekke i. Selvfølgelig hadde dette blitt gjort i en produksjonssetting, 
	men i et prosjekt går jeg for ren, validert kode og ikke annet.
[v] Feilsjekking er på plass der dette anses som relevant, og injiseringsproblematikk
	er tatt hånd om etter beste evne.
[v] Kreativitet utenfor oppgaveteksten er iverksatt.


KOMMENTARER:
Nein.